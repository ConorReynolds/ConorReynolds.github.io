from pygments.lexer import RegexLexer, bygroups, using, words
from pygments import token
from pygments.token import Comment

__all__ = ["EventBLexer"]


class EventBLexer(RegexLexer):
    name = "Event-B"
    aliases = ["eventb", "event-b"]
    # filenames = ['.bumx']

    top_level_keywords = (
        "machine",
        "variables",
        "invariants",
        "events",
        "event",
        "refines",
        "sees",
        "context",
        "sets",
        "constants",
        "axioms",
    )

    event_keywords = ("begin", "end", "where", "then")
    _comment_multiline = r"/(?:\\\n)?[*](?:[^*]|[*](?!(?:\\\n)?/))*[*](?:\\\n)?/"

    tokens = {
        "root": [
            (r"\s+", token.Text),
            (r"(@.*?:)", token.Comment),
            (_comment_multiline, token.Comment.Multiline),
            # These are semantically nonsense but they give the right colours
            (
                words(top_level_keywords, prefix=r"\b", suffix=r"\b"),
                token.Keyword.Namespace,
            ),
            (
                words(event_keywords, prefix=r"\b", suffix=r"\b"),
                token.Keyword.Namespace,
            ),
            # (r"[\w_]+", token.Text),
        ],
    }
